{
    "openapi": "3.0.3",
    "info": {
      "version": "1.0.0",
      "title": "Discoveroo API Docs",
      "description": "This documentstion will help you find your way in our awesome Discoveroo API so that you are able to serve it to your waiting customers!",
      "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
      }
    },
    "servers": [
        {
          "url": "https://mdxompdmpd.execute-api.eu-central-1.amazonaws.com/dev/api/v1/"
        }
      ],
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],

    "paths": {
        "/recommendation": {
            "parameters": [
                {
                    "name": "temp",
                    "in": "query",
                    "required": false,
                    "description": "Temperature range for recommended cities\n\n0 = Doesn't matter\n\n1 = -30 to -10°C\n\n2 = -10 to 10°C\n\n3 = 5 to 15°C\n\n4 = 10 to 25°C\n\n5 = 20 to 30°C\n\n6 = 25 to 35°C\n\n7 = more than 30°C",
                    "type": "integer"
                },
                {
                    "name": "safety",
                    "in": "query",
                    "required": false,
                    "description": "Preferred minimum level of safety in country\n\n 0 (doesn't matter) to 5 (highest safety)",
                    "type": "integer"
                },
                {
                    "name": "cpi",
                    "in": "query",
                    "required": false,
                    "description": "Preferred maximum living costs of country\n\n 5 (doesn't matter) to 5 (lowest cost)",
                    "type": "integer"
                },
                {
                    "name": "infra",
                    "in": "query",
                    "required": false,
                    "description": "Preferred minimum level of infrastructure in country\n\n 0 (doesn't matter) to 5 (highest infrastructure)",
                    "type": "integer"
                },
                {
                    "name": "beach",
                    "in": "query",
                    "required": false,
                    "description": "Preferred level of beaches in or near city\n\n 0 (doesn't matter) to 3 (many beaches)",
                    "type": "integer"
                },
                {
                    "name": "mountains",
                    "in": "query",
                    "required": false,
                    "description": "Preferred level of mountains in city\n\n 0 (doesn't matter) to 5 (highest amount of mountains)",
                    "type": "integer"
                },
                {
                    "name": "aculture",
                    "in": "query",
                    "required": false,
                    "description": "Preferred minimum level of architectural culture in city\n\n0 (doesn't matter) to 5 (highest level of architectural culture)",
                    "type": "integer"
                },
                {
                    "name": "hculture",
                    "in": "query",
                    "required": false,
                    "description": "Preferred minimum level of historical culture in city\n\n 0 (doesn't matter) to 5 (highest level of historical culture)",
                    "type": "integer"
                },
                {
                    "name": "nculture",
                    "in": "query",
                    "required": false,
                    "description": "Preferred minimum level of natural culture in city\n\n 0 (doesn't matter) to 5 (highest level of natural culture)",
                    "type": "integer"
                },
                {
                    "name": "rculture",
                    "in": "query",
                    "required": false,
                    "description": "Preferred minimum level of religious culture in city\n\n 0 (doesn't matter) to 5 (highest level of religious culture)",
                    "type": "integer"
                },
                {
                    "name": "iculture",
                    "in": "query",
                    "required": false,
                    "description": "Preferred minimum level of industrial culture in city\n\n 0 (doesn't matter) to 5 (highest level of industrial culture)",
                    "type": "integer"
                },
                {
                    "name": "cculture",
                    "in": "query",
                    "required": false,
                    "description": "Preferred minimum level of culture (theaters, operas...) in city\n\n 0 (doesn't matter) to 5 (highest level of culture)",
                    "type": "integer"
                },
                {
                    "name": "start",
                    "in": "query",
                    "required": false,
                    "description": "Date where the vacation should start\n\nNeeds to be in YYYY-MM-DD format",
                    "type": "string"
                },
                {
                    "name": "end",
                    "in": "query",
                    "required": false,
                    "description": "Date where the vacation should end\n\nNeeds to be in YYYY-MM-DD format",
                    "type": "string"
                },
                {
                    "name": "distance",
                    "in": "query",
                    "required": false,
                    "description": "Preferred maximum distance to destination in km",
                    "type": "integer"
                },
                {
                    "name": "ZIP",
                    "in": "query",
                    "required": false,
                    "description": "ZIP code of departure city (used to measure distance)",
                    "type": "string"
                },
                {
                    "name": "countryDeparture",
                    "in": "query",
                    "required": false,
                    "description": "Country of departure in ISO-2-Digit format, for example DE for Germany - currently no function",
                    "type": "string"
                }                
            ],
            "get": {
                "tags": [
                    "Recommendation"
                ],
                "summary": "Get weather data for given weather station",
                "responses": {
                    "200": {
                        "description": "Weather data is found"
                    },
                    "404": {
                        "description": "Regions is not valid"
                    }
                }
            }
        },

        "/cities": {
            "get": {
                "tags": [
                    "Cities"
                ],
                "summary": "Get ID, name and country code from all cities in the database",
                "responses": {
                    "200": {
                        "description": "Cities are found",
                        "schema": {
                            "$ref": "#/definitions/Cities"
                        }
                    }
                }
            }
        },
        "/cities/{city}": {
            "parameters": [
                {
                    "name": "city",
                    "in": "path",
                    "required": true,
                    "description": "City ID or city name of the city that you want to find",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Cities"
                ],
                "summary": "Get city details with given ID",
                "responses": {
                    "200": {
                        "description": "City is found",
                        "schema": {
                            "$ref": "#/definitions/Cities"
                        }
                    }
                }
            }
        },
        "/countries": {
            "get": {
                "tags": [
                    "Countries"
                ],
                "summary": "Get country name and country code for all countries in the database",
                "responses": {
                    "200": {
                        "description": "Countries are found",
                        "schema": {
                            "$ref": "#/definitions/Countries"
                        }
                    }
                }
            }
        },
        "/countries/{country}": {
            "parameters": [
                {
                    "name": "country",
                    "in": "path",
                    "required": true,
                    "description": "Country code or country name of the country that you want to find",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Countries"
                ],
                "summary": "Get country details with given country Code",
                "responses": {
                    "200": {
                        "description": "Country is found",
                        "schema": {
                            "$ref": "#/definitions/Countries"
                        }
                    },
                    "404": {
                        "description": "Country Code not valid",
                        "schema": {
                            "$ref": "#/definitions/Countries"
                        }
                    }
                }
            }
        },
        "/countries/{country}/cities": {
            "parameters": [
                {
                    "name": "country",
                    "in": "path",
                    "required": true,
                    "description": "Country name or country code of the country that you want to find cities in",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Countries"
                ],
                "summary": "Get ID and name for all cities in given country",
                "responses": {
                    "200": {
                        "description": "Cities are found",
                        "schema": {
                            "$ref": "#/definitions/Countries"
                        }
                    },
                    "404": {
                        "description": "Country is not valid",
                        "schema": {
                            "$ref": "#/definitions/Countries"
                        }
                    }
                }
            }
        },
        "/countries/{country}/regions": {
            "parameters": [
                {
                    "name": "country",
                    "in": "path",
                    "required": true,
                    "description": "Country name or country code of the country that you want to find regions in",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Countries"
                ],
                "summary": "Get ID and name for all regions in given country",
                "responses": {
                    "200": {
                        "description": "Regions are found",
                        "schema": {
                            "$ref": "#/definitions/Countries"
                        }
                    },
                    "404": {
                        "description": "Regions is not valid",
                        "schema": {
                            "$ref": "#/definitions/Countries"
                        }
                    }
                }
            }
        },
        "/regions": {
            "get": {
                "tags": [
                    "Regions"
                ],
                "summary": "Get region name, region code and country code for all regions in the database",
                "responses": {
                    "200": {
                        "description": "Regions are found",
                        "schema": {
                            "$ref": "#/definitions/Regions"
                        }
                    }
                }
            }
        },
        "/regions/{region}": {
            "parameters": [
                {
                    "name": "region",
                    "in": "path",
                    "required": true,
                    "description": "Region name or region code of the region that you want to find",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Regions"
                ],
                "summary": "Get region details for given region",
                "responses": {
                    "200": {
                        "description": "Regions are found",
                        "schema": {
                            "$ref": "#/definitions/Countries"
                        }
                    },
                    "404": {
                        "description": "Regions is not valid",
                        "schema": {
                            "$ref": "#/definitions/Countries"
                        }
                    }
                }
            }
        },
        "/regions/{region}/cities": {
            "parameters": [
                {
                    "name": "region",
                    "in": "path",
                    "required": true,
                    "description": "Region name or region code of the region that you want to find citiesd in",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Regions"
                ],
                "summary": "Get ID and name for cities in given region",
                "responses": {
                    "200": {
                        "description": "Regions are found",
                        "schema": {
                            "$ref": "#/definitions/Regions"
                        }
                    },
                    "404": {
                        "description": "Regions is not valid",
                        "schema": {
                            "$ref": "#/definitions/Regions"
                        }
                    }
                }
            }
        },

        "/weather": {
            "get": {
                "tags": [
                    "Weather"
                ],
                "summary": "Get all weather stations and corresponding cities from the database",
                "responses": {
                    "200": {
                        "description": "Weather stations are found"
                    }
                }
            }
        },
        "/weather/{city}": {
            "parameters": [
                {
                    "name": "city",
                    "in": "path",
                    "required": true,
                    "description": "City ID or city name that you want to find weather data of",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Weather"
                ],
                "summary": "Get weather data for given city",
                "responses": {
                    "200": {
                        "description": "Weather data is found"
                    },
                    "404": {
                        "description": "Regions is not valid"
                    }
                }
            }
        },
        "/weather/{sation}": {
            "parameters": [
                {
                    "name": "station",
                    "in": "path",
                    "required": true,
                    "description": "Station ID that you want to find weather data of",
                    "type": "string"
                }
            ],
            "get": {
                "tags": [
                    "Weather"
                ],
                "summary": "Get weather data for given weather station",
                "responses": {
                    "200": {
                        "description": "Weather data is found"
                    },
                    "404": {
                        "description": "Regions is not valid"
                    }
                }
            }
        }
    }
  }